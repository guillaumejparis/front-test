{"version":3,"sources":["utils.js","Content.js","hooks.js","App.js","reportWebVitals.js","index.js"],"names":["transition","steps","directions","Content","data","contentListLength","top","step","animate","height","onTransitionEnd","style","opacity","className","index","text","type","disabled","value","usePrevious","ref","useRef","useEffect","current","useDirection","hook","up","down","direction","prevDirection","pauseListener","useWheel","useState","wheelValue","setWheelValue","handleWheel","useCallback","e","deltaY","setTimeout","window","addEventListener","removeEventListener","useTouch","firstTouchPosition","setFirstTouchPosition","moved","setMoved","setDirection","handleTouchStart","touches","clientY","handleTouchMove","handleTouchEnd","changedTouches","App","width","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","useWindowSize","setIndex","setAnimate","prevAnimate","multiple","setMultiple","contentList","useMemo","baseIndex","tmpContentList","i","push","apply","contentListLastIndex","length","setItemsNumber","newMultiple","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAMaA,EAAa,gCAEbC,EAAoB,WAApBA,EAAyC,UAAzCA,EAA0D,OAC1DC,EAAmB,KAAnBA,EAA+B,O,eCU7BC,EAhBC,SAAC,GAA8E,IAA5EC,EAA2E,EAA3EA,KAAMC,EAAqE,EAArEA,kBAAmBC,EAAkD,EAAlDA,IAAKC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,gBAClEC,EAAQ,GAOZ,OALIJ,IAASN,IAA+B,IAAbO,IAAgBG,EAAQ,CAAEL,IAAK,EAAGN,eAC7DO,IAASN,GAA0B,IAAZO,IAAeG,EAAQ,CAAEL,IAAK,EAAGN,eACxDO,IAASN,GAA6B,IAAZO,IAC5BG,EAAQ,CAAEL,KAAkB,IAAbE,EAAiBC,GAAUA,EAAQG,QAAS,EAAGZ,eAG9D,sBAAKa,UAAU,UAAUF,MAAK,aAAIL,OAAQK,GAASD,gBAAiBA,EAApE,2BACMN,QADN,IACMA,OADN,EACMA,EAAMU,MADZ,YACqBT,EADrB,oBAC2CD,QAD3C,IAC2CA,OAD3C,EAC2CA,EAAMW,MAC/C,uBAAOC,KAAK,OAAOH,UAAU,gBAAgBI,UAAQ,EAACC,MAAM,oBCXrDC,EAAc,SAACD,GAC1B,IAAME,EAAMC,mBAIZ,OAHAC,qBAAU,WACRF,EAAIG,QAAUL,KAETE,EAAIG,SA2BAC,EAAe,SAACC,EAAMjB,EAASkB,EAAIC,GAC9C,IAAMC,EAAYH,IACZI,EAAgBV,EAAYS,GAElCN,qBAAU,WACQ,IAAZd,GAAmC,OAAlBqB,GAA0BD,IAAc1B,EAAewB,IACvD,IAAZlB,GAAmC,OAAlBqB,GAA0BD,IAAc1B,GAAiByB,MAClF,CAACC,EAAWC,EAAerB,EAASkB,EAAIC,KAGzCG,GAAgB,EAGPC,EAAW,WAAO,IAAD,EACQC,mBAAS,GADjB,mBACrBC,EADqB,KACTC,EADS,KAGtBC,EAAcC,uBAClB,SAACC,GACKP,IAECG,GAAc,GAAKI,EAAEC,OAAS,IAAQL,GAAc,GAAKI,EAAEC,QAAU,MACxER,GAAgB,EAChBI,EAAcG,EAAEC,QAEhBC,YAAW,WACTT,GAAgB,EAChBI,EAAc,KACb,QAGP,CAACD,IAQH,OALAX,qBAAU,WAER,OADAkB,OAAOC,iBAAiB,QAASN,GAC1B,kBAAMK,OAAOE,oBAAoB,QAASP,MAChD,CAACA,IAEe,IAAfF,EAAyB,KACtBA,EAAa,EAAI/B,EAAkBA,GAI/ByC,EAAW,WAAO,IAAD,EACwBX,mBAAS,MADjC,mBACrBY,EADqB,KACDC,EADC,OAEFb,oBAAS,GAFP,mBAErBc,EAFqB,KAEdC,EAFc,OAGMf,mBAAS,MAHf,mBAGrBJ,EAHqB,KAGVoB,EAHU,KAKtBC,EAAmBb,uBAAY,SAACC,GAChCP,GACJe,EAAsBR,EAAEa,QAAQ,GAAGC,WAClC,IAEGC,EAAkBhB,uBAAY,SAACC,GAC/BP,GACJiB,GAAS,KACR,IAEGM,EAAiBjB,uBACrB,SAACC,GACKP,IACJA,GAAgB,EAChBe,EAAsB,MACtBE,GAAS,GACLD,GAAOE,EAAaX,EAAEiB,eAAe,GAAGH,QAAUP,EAAqB,EAAI1C,EAAgBA,GAE/FqC,YAAW,WACTT,GAAgB,EAChBkB,EAAa,QACZ,QAEL,CAACJ,EAAoBE,IAcvB,OAXAxB,qBAAU,WAIR,OAHAkB,OAAOC,iBAAiB,aAAcQ,GACtCT,OAAOC,iBAAiB,YAAaW,GACrCZ,OAAOC,iBAAiB,WAAYY,GAC7B,WACLb,OAAOE,oBAAoB,aAAcO,GACzCT,OAAOE,oBAAoB,YAAaU,GACxCZ,OAAOE,oBAAoB,WAAYW,MAExC,CAACJ,EAAkBG,EAAiBC,IAEhCzB,GCvCM2B,MA1Ef,WAAgB,IACN9C,EDGmB,WAAM,MAEGuB,mBAAS,CAC3CwB,MAAO,IACP/C,OAAQ,MAJuB,mBAE1BgD,EAF0B,KAEdC,EAFc,KAkBjC,OAZApC,qBAAU,WACR,IAAMqC,EAAe,WACnBD,EAAc,CACZF,MAAOhB,OAAOoB,WACdnD,OAAQ+B,OAAOqB,eAMnB,OAHArB,OAAOC,iBAAiB,SAAUkB,GAClCA,IAEO,kBAAMnB,OAAOE,oBAAoB,SAAUiB,MACjD,IACIF,ECrBYK,GAAXrD,OADK,EAEauB,mBAAS,GAFtB,mBAENlB,EAFM,KAECiD,EAFD,OAGiB/B,mBAAS,GAH1B,mBAGNxB,EAHM,KAGGwD,EAHH,KAIPC,EAAc9C,EAAYX,GAJnB,EAKmBwB,mBAAS,GAL5B,mBAKNkC,EALM,KAKIC,EALJ,KAMPC,EAAcC,mBAAQ,WAE1B,IADA,IHd+BC,EGc3BC,EAAiB,GACZC,EAAI,EAAGA,EAAIN,EAAUM,IAC5BD,EAAeE,KAAKC,MAAMH,EHhBiB,CAC/C,CAAEzD,MAAO,EAAI,GADoBwD,EGgBgCE,GHfrCzD,KAAM,SAAUG,MAAO,IACnD,CAAEJ,MAAO,EAAI,EAAIwD,EAAWvD,KAAM,QAASG,MAAO,IAClD,CAAEJ,MAAO,EAAI,EAAIwD,EAAWvD,KAAM,QAASG,MAAO,MGehD,OAAOqD,IACN,CAACL,IACES,EAAuBN,mBAAQ,kBAAMD,EAAYQ,OAAS,IAAG,CAACR,IAC9D/D,EAAoBgE,mBAAQ,kBAAMD,EAAYQ,SAAQ,CAACR,IAEvD1C,EAAKU,uBAAY,kBAAMtB,EAAQ,GAAK,GAAKkD,GAAY,KAAI,CAAClD,IAC1Da,EAAOS,uBAAY,kBAAMtB,EAAQ6D,GAAwBX,EAAW,KAAI,CAAClD,EAAO6D,IAChFE,EAAiBzC,uBAAY,SAAC0C,GAClCf,EAAS,GACTI,EAAYW,KACX,IAQH,OANAxD,qBAAU,WACY,IAAhB2C,GAAiC,IAAZzD,GAAeuD,EAASjD,EAAQmD,GAAe,KACvE,CAACA,EAAazD,EAASM,IAC1BU,EAAaO,EAAUvB,EAASkB,EAAIC,GACpCH,EAAamB,EAAUnC,EAASkB,EAAIC,GAGlC,sBAAKd,UAAU,MAAf,UACE,cAAC,EAAD,CACET,KAAMgE,EAAYtD,EAAQ,GAC1BT,kBAAmBA,EACnBC,KAAMG,EACNA,OAAQA,EACRD,QAASA,EACTD,KAAMN,IAER,cAAC,EAAD,CACEG,KAAMgE,EAAYtD,GAClBT,kBAAmBA,EACnBK,gBAAiB,WACfsD,EAAW,IAEb1D,IAAK,EACLG,OAAQA,EACRD,QAASA,EACTD,KAAMN,IAER,cAAC,EAAD,CACEG,KAAMgE,EAAYtD,EAAQ,GAC1BT,kBAAmBA,EACnBC,IAAKG,EACLA,OAAQA,EACRD,QAASA,EACTD,KAAMN,IAGR,sBAAKY,UAAU,cAAf,UACE,gCACE,wBAAQkE,QAAS,kBAAMF,EAAe,IAAtC,gBACA,wBAAQE,QAAS,kBAAMF,EAAe,MAAtC,oBACA,wBAAQE,QAAS,kBAAMF,EAAe,MAAtC,wBAEF,gCACE,wBAAQE,QAASrD,EAAjB,kBACA,wBAAQqD,QAASpD,EAAjB,4BC9DKqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAK1Bb,M","file":"static/js/main.296afb7e.chunk.js","sourcesContent":["export const getBaseContentList = (baseIndex) => [\n  { index: 1 + 3 * baseIndex, text: 'What ?', value: '' },\n  { index: 2 + 3 * baseIndex, text: 'Why ?', value: '' },\n  { index: 3 + 3 * baseIndex, text: 'Who ?', value: '' },\n];\n\nexport const transition = 'top .5s ease-out, opacity .5s';\n\nexport const steps = { PREVIOUS: 'PREVIOUS', CURRENT: 'CURRENT', NEXT: 'NEXT' };\nexport const directions = { UP: 'UP', DOWN: 'DOWN' };\n","import { steps, transition } from './utils';\nimport './Content.css';\n\nconst Content = ({ data, contentListLength, top, step, animate, height, onTransitionEnd }) => {\n  let style = {};\n\n  if (step === steps.PREVIOUS && animate === -1) style = { top: 0, transition };\n  if (step === steps.NEXT && animate === 1) style = { top: 0, transition };\n  if (step === steps.CURRENT && animate !== 0)\n    style = { top: animate === -1 ? height : -height, opacity: 0, transition };\n\n  return (\n    <div className=\"Content\" style={{ top, ...style }} onTransitionEnd={onTransitionEnd}>\n      {`${data?.index}/${contentListLength}- ${data?.text}`}\n      <input type=\"text\" className=\"Content-input\" disabled value=\"placeholder\" />\n    </div>\n  );\n};\n\nexport default Content;\n","import { useEffect, useState, useRef, useCallback } from 'react';\nimport { directions } from './utils';\n\nexport const usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nexport const useWindowSize = () => {\n  // default handles our use case only\n  const [windowSize, setWindowSize] = useState({\n    width: 10000,\n    height: 10000,\n  });\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return windowSize;\n};\n\n// events hooks\n\n// hook to avoid code duplicate for wheel & touch hooks\nexport const useDirection = (hook, animate, up, down) => {\n  const direction = hook();\n  const prevDirection = usePrevious(direction);\n\n  useEffect(() => {\n    if (animate === 0 && prevDirection === null && direction === directions.UP) up();\n    else if (animate === 0 && prevDirection === null && direction === directions.DOWN) down();\n  }, [direction, prevDirection, animate, up, down]);\n};\n\nlet pauseListener = false;\n\n// for touchpad and mouse wheel\nexport const useWheel = () => {\n  const [wheelValue, setWheelValue] = useState(0);\n\n  const handleWheel = useCallback(\n    (e) => {\n      if (pauseListener) return;\n      // deltaY threshold can be ajusted depending on device to avoid passing two steps at once\n      if ((wheelValue <= 0 && e.deltaY > 30) || (wheelValue >= 0 && e.deltaY < -30)) {\n        pauseListener = true;\n        setWheelValue(e.deltaY);\n        // pause listener for 500ms (pause before passing to another step)\n        setTimeout(() => {\n          pauseListener = false;\n          setWheelValue(0);\n        }, 500);\n      }\n    },\n    [wheelValue],\n  );\n\n  useEffect(() => {\n    window.addEventListener('wheel', handleWheel);\n    return () => window.removeEventListener('wheel', handleWheel);\n  }, [handleWheel]);\n\n  if (wheelValue === 0) return null;\n  return wheelValue > 0 ? directions.DOWN : directions.UP;\n};\n\n// for touch\nexport const useTouch = () => {\n  const [firstTouchPosition, setFirstTouchPosition] = useState(null);\n  const [moved, setMoved] = useState(false);\n  const [direction, setDirection] = useState(null);\n\n  const handleTouchStart = useCallback((e) => {\n    if (pauseListener) return;\n    setFirstTouchPosition(e.touches[0].clientY);\n  }, []);\n\n  const handleTouchMove = useCallback((e) => {\n    if (pauseListener) return;\n    setMoved(true);\n  }, []);\n\n  const handleTouchEnd = useCallback(\n    (e) => {\n      if (pauseListener) return;\n      pauseListener = true;\n      setFirstTouchPosition(null);\n      setMoved(false);\n      if (moved) setDirection(e.changedTouches[0].clientY - firstTouchPosition > 0 ? directions.UP : directions.DOWN);\n      // pause listener for 100ms (pause before passing to another step, less time for mobile because of touch end you cannot pass two steps at once)\n      setTimeout(() => {\n        pauseListener = false;\n        setDirection(null);\n      }, 100);\n    },\n    [firstTouchPosition, moved],\n  );\n\n  useEffect(() => {\n    window.addEventListener('touchstart', handleTouchStart);\n    window.addEventListener('touchmove', handleTouchMove);\n    window.addEventListener('touchend', handleTouchEnd);\n    return () => {\n      window.removeEventListener('touchstart', handleTouchStart);\n      window.removeEventListener('touchmove', handleTouchMove);\n      window.removeEventListener('touchend', handleTouchEnd);\n    };\n  }, [handleTouchStart, handleTouchMove, handleTouchEnd]);\n\n  return direction;\n};\n","import { useState, useMemo, useEffect, useCallback } from 'react';\n\nimport './App.css';\nimport Content from './Content';\nimport { usePrevious, useWindowSize, useWheel, useTouch, useDirection } from './hooks';\nimport { getBaseContentList, steps } from './utils';\n\nfunction App() {\n  const { height } = useWindowSize();\n  const [index, setIndex] = useState(0);\n  const [animate, setAnimate] = useState(0);\n  const prevAnimate = usePrevious(animate);\n  const [multiple, setMultiple] = useState(1);\n  const contentList = useMemo(() => {\n    let tmpContentList = [];\n    for (let i = 0; i < multiple; i++) {\n      tmpContentList.push.apply(tmpContentList, getBaseContentList(i));\n    }\n    return tmpContentList;\n  }, [multiple]);\n  const contentListLastIndex = useMemo(() => contentList.length - 1, [contentList]);\n  const contentListLength = useMemo(() => contentList.length, [contentList]);\n\n  const up = useCallback(() => index - 1 >= 0 && setAnimate(-1), [index]);\n  const down = useCallback(() => index < contentListLastIndex && setAnimate(1), [index, contentListLastIndex]);\n  const setItemsNumber = useCallback((newMultiple) => {\n    setIndex(0);\n    setMultiple(newMultiple);\n  }, []);\n\n  useEffect(() => {\n    if (prevAnimate !== 0 && animate === 0) setIndex(index + prevAnimate || 0);\n  }, [prevAnimate, animate, index]);\n  useDirection(useWheel, animate, up, down);\n  useDirection(useTouch, animate, up, down);\n\n  return (\n    <div className=\"App\">\n      <Content\n        data={contentList[index - 1]}\n        contentListLength={contentListLength}\n        top={-height}\n        height={height}\n        animate={animate}\n        step={steps.PREVIOUS}\n      />\n      <Content\n        data={contentList[index]}\n        contentListLength={contentListLength}\n        onTransitionEnd={() => {\n          setAnimate(0);\n        }}\n        top={0}\n        height={height}\n        animate={animate}\n        step={steps.CURRENT}\n      />\n      <Content\n        data={contentList[index + 1]}\n        contentListLength={contentListLength}\n        top={height}\n        height={height}\n        animate={animate}\n        step={steps.NEXT}\n      />\n      {/* buttons */}\n      <div className=\"App-buttons\">\n        <div>\n          <button onClick={() => setItemsNumber(1)}>x1</button>\n          <button onClick={() => setItemsNumber(10000)}>x10000</button>\n          <button onClick={() => setItemsNumber(100000)}>x100000</button>\n        </div>\n        <div>\n          <button onClick={up}>Prev</button>\n          <button onClick={down}>Next</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}